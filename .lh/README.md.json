{
    "sourceFile": "README.md",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 0,
            "patches": [
                {
                    "date": 1739347843425,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                }
            ],
            "date": 1739347843425,
            "name": "Commit-0",
            "content": "[![Netlify Status](https://api.netlify.com/api/v1/badges/9f2f756f-e1fc-48d9-9c07-b7d7433d8aaa/deploy-status)](https://app.netlify.com/sites/flamboyant-lumiere-482a1e/deploys)\n\n# ☕ STARBUCKS\n\n![Starbucks](https://raw.githubusercontent.com/ParkYoungWoong/starbucks-vanilla-app/master/_assets/main_screenshot.jpg)\n\n## 문자 인코딩(Character Encoding) 설정\n\n문자가 인코딩되는 방식을 설정합니다.\n\n```html\n<meta charset=\"UTF-8\" />\n```\n\n- `UTF-8`: 초성, 중성, 종성으로 구분하여 문자를 작성(권장)\n- `EUC-KR`: 하나의 완성된 글자를 인식\n\n## 뷰포트(Viewport) 렌더링 방식 설정\n\n웹페이지가 화면(Viewport)에 표현되는 방식을 설정합니다.<br>\n모바일 환경에서 적용됩니다.\n\n```html\n<meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\" />\n```\n\n- `width=device-width`: 화면의 가로 너비를 각 디바이스(Device)의 가로 너비와 동일하게 적용\n- `initial-scale=1.0`: 화면의 초기 화면 배율(확대 정도)을 설정\n- `user-scalable=no`: 사용자가 디바이스 화면을 확대(`yes`)/축소(`no`)할 수 있는지 설정\n- `maximum-scale=1`: 사용자가 화면을 확대할 수 있는 최댓값\n- `minimum-scale=1`: 사용자가 화면을 축소할 수 있는 최솟값\n\n## 오픈 그래프(The Open Graph protocol)\n\n웹페이지가 소셜 미디어(페이스북 등)로 공유될 때 우선적으로 활용되는 정보를 지정합니다.\n\nSlack -\n\n![Slack Open Graph example](https://raw.githubusercontent.com/ParkYoungWoong/starbucks-vanilla-app/master/_assets/slack_message_og_example.jpg)\n\nKakaoTalk -\n\n![KakaoTalk Open Graph example](https://raw.githubusercontent.com/ParkYoungWoong/starbucks-vanilla-app/master/_assets/kakao_og_example.jpg)\n\n[더 많은 오픈 그래프 속성 보기](https://ogp.me/)\n\n```html\n<meta property=\"og:type\" content=\"website\" />\n<meta property=\"og:site_name\" content=\"Starbucks\" />\n<meta property=\"og:title\" content=\"Starbucks Coffee Korea\" />\n<meta\n  property=\"og:description\"\n  content=\"스타벅스는 세계에서 가장 큰 다국적 커피 전문점으로, 64개국에서 총 23,187개의 매점을 운영하고 있습니다.\"\n/>\n<meta property=\"og:image\" content=\"./images/starbucks_seo.jpg\" />\n<meta property=\"og:url\" content=\"https://starbucks.co.kr\" />\n```\n\n- `og:type`: 페이지의 유형(E.g, `website`, `video.movie`)\n- `og:site_name`: 속한 사이트의 이름\n- `og:title`: 페이지의 이름(제목)\n- `og:description`: 페이지의 간단한 설명\n- `og:image`: 페이지의 대표 이미지 주소(URL)\n- `og:url`: 페이지 주소(URL)\n\n## 트위터 카드(Twitter Cards)\n\n웹페이지가 소셜 미디어(트위터)로 공유될 때 우선적으로 활용되는 정보를 지정합니다.\n\n[더 많은 트위터 카드 보기](https://developer.twitter.com/en/docs/twitter-for-websites/cards/guides/getting-started)\n\n```html\n<meta property=\"twitter:card\" content=\"summary\" />\n<meta property=\"twitter:site\" content=\"Starbucks\" />\n<meta property=\"twitter:title\" content=\"Starbucks Coffee Korea\" />\n<meta\n  property=\"twitter:description\"\n  content=\"스타벅스는 세계에서 가장 큰 다국적 커피 전문점으로, 64개국에서 총 23,187개의 매점을 운영하고 있습니다.\"\n/>\n<meta property=\"twitter:image\" content=\"./images/starbucks_seo.jpg\" />\n<meta property=\"twitter:url\" content=\"https://starbucks.co.kr\" />\n```\n\n- `twitter:card`: 페이지(카드)의 유형(E.g. `summary`, `player`)\n- `twitter:site`: 속한 사이트의 이름\n- `twitter:title`: 페이지의 이름(제목)\n- `twitter:description`: 페이지의 간단한 설명\n- `twitter:image`: 페이지의 대표 이미지 주소(URL)\n- `twitter:url`: 페이지 주소(URL)\n\n## Favicon(파비콘, favorites icon)\n\n웹페이지를 나타내는 아이콘, 웹페이지의 로고를 설정합니다.<br>\n대부분의 경우 루트 경로에 `favicon.ico` 파일을 위치하면 자동으로 로딩하기 때문에 `<link />` 를 작성할 필요가 없습니다.\n`favicon.png` 파일을 사용하려면 다음과 같이 `<link />`를 작성하세요.\n\n> 파비콘 이미지는 루트 경로에 있어야 합니다!\n\n```html\n<!--<link rel=\"shortcut icon\" href=\"favicon.ico\" />-->\n<link rel=\"icon\" href=\"./favicon.png\" />\n```\n\n- `favicon.ico` 64 x 64 (px) 또는 32 x 32 또는 16 x 16\n- `favicon.png` 500 x 500 (px)\n\n<img src=\"https://raw.githubusercontent.com/ParkYoungWoong/starbucks-vanilla-app/master/favicon.png\" alt=\"Starbucks\" width=\"16\" />\n<img src=\"https://raw.githubusercontent.com/ParkYoungWoong/starbucks-vanilla-app/master/favicon.png\" alt=\"Starbucks\" width=\"200\" />\n\n### .ico 파일 제작\n\n이미지를 업로드하면 손쉽게 `.ico` 파일을 제작할 수 있습니다.\n\n[iconifier.net](https://iconifier.net/)\n\n## Reset.css\n\n각 브라우저의 기본 스타일을 초기화합니다.\n\n```html\n<link\n  rel=\"stylesheet\"\n  href=\"https://cdn.jsdelivr.net/npm/reset-css@5.0.1/reset.min.css\"\n/>\n```\n## Google Fonts\n\n페이지에서 사용할 '나눔고딕' 폰트를 지정합니다.\n\n> 폰트 라이선스를 꼭 확인해야 합니다!\n\n[Google Fonts](https://fonts.google.com/)에서 고른 폰트 파일을 가져옵니다.\n\n```html\n<link rel=\"preconnect\" href=\"https://fonts.gstatic.com\" />\n<link\n  href=\"https://fonts.googleapis.com/css2?family=Nanum+Gothic:wght@400;700&display=swap\"\n  rel=\"stylesheet\"\n/>\n```\n\n페이지에 폰트를 적용(CSS 상속)합니다.\n\n```css\nbody {\n  font-family: 'Nanum Gothic', sans-serif;\n}\n```\n## Google Material Icons\n\n[구글에서 제공하는 머터리얼 아이콘](https://material.io/resources/icons/?style=baseline)을 무료로 사용할 수 있습니다.\n\n[Getting started for web](https://material.io/develop/web/getting-started)\n\n```html\n<link\n  rel=\"stylesheet\"\n  href=\"https://fonts.googleapis.com/icon?family=Material+Icons\"\n/>\n```\n\n다음과 같이 사용할 수 있습니다.\n\n```html\n<div class=\"material-icons\">upload</div>\n```\n## Lodash\n\nlodash는 자바스크립트 유틸리티 라이브러리로써 array, collection, da\nte, number, object 등이 있으며, 데이터를 쉽게 다룰 수 있도록 도와줍니다. (특히, 자바스크립트에서 배열 안의 객체들의 값을 핸들링할때 유용)\n\n[Lodash cdn 시작하기](https://cdnjs.com/libraries/lodash.js)\n+ [Lodash 알아보자 - 공식사이트](https://lodash.com/docs/4.17.15)\n+ [Lodash 알아보자 - 블로그](https://velog.io/@yoosg/Lodash)\n\n\n## GSAP\n\n[GSAP(The GreenSock Animation Platform)](https://greensock.com/gsap/)은 자바스크립트로 제어하는 타임라인 기반의 애니메이션 라이브러리입니다.\n\n> 자바스크립트 지식이 뛰어나지 않아도 충분히 사용할 수 있습니다!\n```html\n<script src=\"https://cdnjs.cloudflare.com/ajax/libs/gsap/3.5.1/gsap.min.js\" integrity=\"sha512-IQLehpLoVS4fNzl7IfH8Iowfm5+RiMGtHykgZJl9AWMgqx0AmJ6cRWcB+GaGVtIsnC4voMfm8f2vwtY+6oPjpQ==\" crossorigin=\"anonymous\"></script>\n```\n\n[.to() 사용법](https://greensock.com/docs/v3/GSAP/gsap.to())\n[GSAP Easing](https://greensock.com/docs/v2/Easing)\n\n```js\ngsap.to(요소, 시간, 옵션)\n// 또는\nTweenMax.to(요소, 시간, 옵션)\n```\n\n```js\ngsap.to(window, .7, {\n  scrollTo: 0\n});\n```\n\n\n\n# Overwatch hero selector\n\n## [refactoring]Image Safety(fast)\n```\n    (더 좋은 방법이 있지만, 순차적으로 진행한다.)\n    이미지를 해당 프로젝트에 저장합니다.\n```\n### Image url\n```paintext\n    네트워크 연결이 필요해, 비교적 불안정하며,\n    속도도 비교적 느립니다.\n```\n\n#### Characters\n\n이미지 이름에 숫자를 확인!\n`hero1.png`~`hero32.png`\n\n```url\nhttps://raw.githubusercontent.com/ParkYoungWoong/overwatch-hero-selector-vanilla/master/images/hero1.png\n```\n\n#### Overwatch logo\n\n```url\nhttps://raw.githubusercontent.com/ParkYoungWoong/overwatch-hero-selector-vanilla/master/images/logo_overwatch.png\n```\n\n#### Background\n\n```url\nhttps://raw.githubusercontent.com/ParkYoungWoong/overwatch-hero-selector-vanilla/master/images/bg.jpg\n```\n"
        }
    ]
}